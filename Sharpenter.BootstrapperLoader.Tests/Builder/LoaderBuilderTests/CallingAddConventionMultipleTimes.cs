using System.Linq;
using Moq;
using Sharpenter.BootstrapperLoader.Builder;
using Sharpenter.BootstrapperLoader.Helpers;
using Xunit;

namespace Sharpenter.BootstrapperLoader.Tests.Builder.LoaderBuilderTests
{
    public class CallingAddConventionMultipleTimes
    {
        private readonly Mock<IAssemblyProvider> _assemblyProviderMock;
        private readonly BootstrapperLoader _loader;

        public CallingAddConventionMultipleTimes()
        {
            _assemblyProviderMock = new Mock<IAssemblyProvider>();
            _loader = new LoaderBuilder()
                .Use(_assemblyProviderMock.Object)
                .ForClass()
                    .When(() => true)
                        .AddMethodNameConvention("Development")
                        .AddMethodNameConvention("Staging")
                .Build();
        }

        [Fact(DisplayName = "Should store union of methods generated by added conventions in addition to default methods")]
        public void should_store_union_of_methods_generated_by_added_conventions()
        {
            Assert.Equal(new string[] { "Configure", "ConfigureDevelopment", "ConfigureStaging" }, _loader.Config.ConfigureMethods.Keys.ToArray());
            Assert.Equal(new string[] { "ConfigureContainer", "ConfigureDevelopmentContainer", "ConfigureStagingContainer" }, _loader.Config.ConfigureContainerMethods.Keys.ToArray());
        }
    }
}